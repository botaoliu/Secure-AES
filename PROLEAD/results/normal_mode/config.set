max_no_of_threads   % maximum number of threads *parallel operation* 
16

no_of_groups % number of groups to conduct the test, e.g., fixed vs. fixed, fixed vs. random, etc. 
2

288'h$$$$$$$$00000000000000000000000000000000$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 
288'h$$$$$$$$0000000000000000000000000000000000000000000000000000000000000000

clock_signal_name    % name of the clock signal
ClkxCI

max_clock_cycle   % maximum number of clock cycles per run before checking the end_condition 
50

no_of_always_random_inputs % number of inputs which are fed randomly at every clock cycle 
0

no_of_initial_inputs   % number of primary inputs during the initialization 
9

no_of_initial_clock_cycles   % number of clock cycles to initiate the run (start of encryption) 
18

[7:0]   PTxDI0    8'h00
[7:0]   PTxDI1    8'h00
[7:0]   KxDI0     8'h00
[7:0]   KxDI1     8'h00
        RstxBI   1'b0
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random   23'b00000000000000000000000
[7:0]   guard    8'b00000000

[7:0]   PTxDI0    group_in0[7:0]
[7:0]   PTxDI1    group_in1[7:0]
[7:0]   KxDI0     group_in0[135:128]
[7:0]   KxDI1     group_in1[135:128]
        RstxBI   1'b1
        StartxSI 1'b1
        rg_start 1'b1
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[15:8]
[7:0]   PTxDI1    group_in1[15:8]
[7:0]   KxDI0     group_in0[143:136]
[7:0]   KxDI1     group_in1[143:136]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[23:16]
[7:0]   PTxDI1    group_in1[23:16]
[7:0]   KxDI0     group_in0[151:144]
[7:0]   KxDI1     group_in1[151:144]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[31:24]
[7:0]   PTxDI1    group_in1[31:24]
[7:0]   KxDI0     group_in0[159:152]
[7:0]   KxDI1     group_in1[159:152]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[39:32]
[7:0]   PTxDI1    group_in1[39:32]
[7:0]   KxDI0     group_in0[167:160]
[7:0]   KxDI1     group_in1[167:160]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[47:40]
[7:0]   PTxDI1    group_in1[47:40]
[7:0]   KxDI0     group_in0[175:168]
[7:0]   KxDI1     group_in1[175:168]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[55:48]
[7:0]   PTxDI1    group_in1[55:48]
[7:0]   KxDI0     group_in0[183:176]
[7:0]   KxDI1     group_in1[183:176]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[63:56]
[7:0]   PTxDI1    group_in1[63:56]
[7:0]   KxDI0     group_in0[191:184]
[7:0]   KxDI1     group_in1[191:184]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[71:64]
[7:0]   PTxDI1    group_in1[71:64]
[7:0]   KxDI0     group_in0[199:192]
[7:0]   KxDI1     group_in1[199:192]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[79:72]
[7:0]   PTxDI1    group_in1[79:72]
[7:0]   KxDI0     group_in0[207:200]
[7:0]   KxDI1     group_in1[207:200]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[87:80]
[7:0]   PTxDI1    group_in1[87:80]
[7:0]   KxDI0     group_in0[215:208]
[7:0]   KxDI1     group_in1[215:208]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[95:88]
[7:0]   PTxDI1    group_in1[95:88]
[7:0]   KxDI0     group_in0[223:216]
[7:0]   KxDI1     group_in1[223:216]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[103:96]
[7:0]   PTxDI1    group_in1[103:96]
[7:0]   KxDI0     group_in0[231:224]
[7:0]   KxDI1     group_in1[231:224]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[111:104]
[7:0]   PTxDI1    group_in1[111:104]
[7:0]   KxDI0     group_in0[239:232]
[7:0]   KxDI1     group_in1[239:232]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[119:112]
[7:0]   PTxDI1    group_in1[119:112]
[7:0]   KxDI0     group_in0[247:240]
[7:0]   KxDI1     group_in1[247:240]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    group_in0[127:120]
[7:0]   PTxDI1    group_in1[127:120]
[7:0]   KxDI0     group_in0[255:248]
[7:0]   KxDI1     group_in1[255:248]
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

[7:0]   PTxDI0    8'h00
[7:0]   PTxDI1    8'h00
[7:0]   KxDI0     8'h00
[7:0]   KxDI1     8'h00
        RstxBI   1'b1
        StartxSI 1'b0
        rg_start 1'b0
[22:0]  random group_in0[278:256]
[7:0]   guard  group_in0[286:279]

end_condition    % the condition to check to terminate the simulation (e.g., done signal is high)
                 % or a numer of clock cycles, e.g., ClockCycles 5
%DONE 1'b1
%[31:0]  y    32'h89ABCE00
ClockCycles 50

end_wait_cycles   % number of clock cycles to wait after the end_condition 
0

order_of_test % maximum number of probes, i.e., order of test
1

multivariate_test % no: only univariate test should be done, yes: univariate + multivariate
no

transitional_leakage % yes/no: whether transitional leakage should be considered in the tests
no

compact_distributions % yes/no: whether distributions (of probes) should be considered as compact. 
                      % it is recommended to use 'no' only for small circuits and low security orders
no

minimize_probe_sets   % yes/no: whether it should be tried to find equivalent probing sets.
                      % it is recommended to use 'yes' only for small circuits and low security orders
yes

no_of_probing_sets_per_step

2500

no_of_test_clock_cycles % number of blocks to define clock cycles which should be covered in the tests
1

1-50  % clock cycle 19-24

no_of_simulations % total number of simulations (traces) in the tests, should be a factor of 64
153600

no_of_step_simulations % number of simulations in each step, should be a factor of 64, and a divisor of no_of_simulations
12800

no_of_step_write_results % number of simulations in each step that result files are written, 
                         % should be a factor of 64, and a divisor of no_of_simulations and
                         % should be a factor of no_of_step_simulations
12800

no_of_entries_in_report  % max number of entries in the report file with maximum leakage
10                       % 0 : do not generate the report file

probes_exclude   % those wires which should be exclused for probing (all : to exclude them all, 0 : to exclude none, e.g., 2 : to exclude two and name them) 
0

probes_include   % those wires which should be included for probing (all : to include them all, 0 : to include none, e.g., 2 : to inlcude two and name them)  
all